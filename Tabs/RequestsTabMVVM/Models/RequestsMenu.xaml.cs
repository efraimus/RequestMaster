using RequestMaster.Databases.MainDatabase;
using RequestMaster.Patterns;
using System.ComponentModel;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;

namespace RequestMaster.Tabs.RequestsTabMVVM.Models
{
    public partial class RequestsGrid : UserControl
    {
        RequestsContext db;
        RequestsMenuLogger logger;
        Snackbar snackBar;
        string statusFilter;
        int? authorFilter;
        public RequestsGrid()
        {
            InitializeComponent();
            logger = new RequestsMenuLogger();
            snackBar = new Snackbar(snackBarXAML);
            db = DatabaseSingleton.CreateInstance();
            helpButton.Focus();
            refreshTables();
        }
        private void refreshTables()
        {
            requestsDataGrid.ItemsSource = db.Requests.ToList();
            requestsDataGrid.AutoGeneratedColumns += requestsDataGrid_AutoGeneratedColumns;
            logger.log($"таблицы обновлены");
        }

        private void requestsDataGrid_AutoGeneratedColumns(object? sender, EventArgs e)
        {
            requestsDataGrid.Columns[0].Header = "ID";
            requestsDataGrid.Columns[1].Header = "описание";
            requestsDataGrid.Columns[2].Header = "номер";
            requestsDataGrid.Columns[3].Header = "статус";
            requestsDataGrid.Columns[4].Visibility = Visibility.Hidden;
            requestsDataGrid.Columns[5].Visibility = Visibility.Hidden;
            requestsDataGrid.Columns[6].Visibility = Visibility.Hidden;
            requestsDataGrid.Columns[7].Visibility = Visibility.Hidden;
        }



        private void helpButton_Click(object sender, RoutedEventArgs e)
        {
            snackBar.show("нажмите на любую заявку дважды");
            logger.log($"нажата кнопка помощь");
        }
        private void ClearFiltersButton_Click(object sender, RoutedEventArgs e)
        {
            statusFilter = string.Empty;
            authorFilter = null;
            refreshRequestsDataGridWithoutFilters();

            logger.log($"фильтры очищены");
        }
        private void createRequestButton_Click(object sender, RoutedEventArgs e)
        {
            Requests.createRequestMenu.Visibility = Visibility.Visible;

            logger.log($"нажата кнопка создать заявку");
        }

        private void refreshRequestsDataGridWithoutFilters()
        {
            requestsDataGrid.ItemsSource = db.Requests.ToList();
            radioButtonStatus_NotImportant.IsChecked = true;
            radioButtonAuthor_NotImportant.IsChecked = true;

            logger.log($"таблица обновлена без фильтров");
        }
        private void requestsDataGrid_MouseDoubleClick(object sender, System.Windows.Input.MouseButtonEventArgs e)
        {
            Requests.requestCard = db.Requests.Where(x => x.RequestID == requestsDataGrid.SelectedIndex + 1).First();
            Requests.requestDetailsMenu.Visibility = Visibility.Visible;

            logger.log($"открыто меню детали заявки №{requestsDataGrid.SelectedIndex + 1}");
        }
        private void SortButton_Click(object sender, RoutedEventArgs e)
        {
            if (statusFilter == string.Empty && authorFilter == null)
            {
                requestsDataGrid.ItemsSource = db.Requests.ToList();
            }
            else if (statusFilter != string.Empty && authorFilter != null)
            {
                requestsDataGrid.ItemsSource = db.Requests.Where(x =>
                x.Status == statusFilter.ToString() && x.WhoCreatedID == authorFilter).ToList();
            }
            else if (statusFilter != string.Empty && authorFilter == 0)
            {
                requestsDataGrid.ItemsSource = db.Requests.Where(x =>
                x.Status == statusFilter.ToString() && x.WhoCreatedID != authorFilter).ToList();
            }
            else if (statusFilter == string.Empty && authorFilter != null)
            {
                requestsDataGrid.ItemsSource = db.Requests.Where(x =>
                x.WhoCreatedID == authorFilter).ToList();
            }
            else if (statusFilter == string.Empty && authorFilter == 0)
            {
                requestsDataGrid.ItemsSource = db.Requests.Where(x =>
                x.WhoCreatedID != AuthWindow.user!.UserID).ToList();
            }
            else if (statusFilter != string.Empty && authorFilter == null)
            {
                requestsDataGrid.ItemsSource = db.Requests.Where(x =>
                x.Status == statusFilter).ToList();
            }
            MessageBox.Show($"{statusFilter}, {authorFilter}");
            CollectionViewSource.GetDefaultView(requestsDataGrid.ItemsSource).Refresh();
            logger.log($"заявки отсортированы");
        }
        private void radioButtonStatus_Active_Checked(object sender, RoutedEventArgs e)
        {
            statusFilter = "активна";
        }

        private void radioButtonStatus_Processing_Checked(object sender, RoutedEventArgs e)
        {
            statusFilter = "в обработке";
        }

        private void radioButtonStatus_Closed_Checked(object sender, RoutedEventArgs e)
        {
            statusFilter = "закрыта";
        }
        private void radioButtonStatus_NotImportant_Checked(object sender, RoutedEventArgs e)
        {
            statusFilter = string.Empty;
        }

        private void radioButtonAuthor_Me_Checked(object sender, RoutedEventArgs e)
        {
            authorFilter = AuthWindow.user!.UserID;
        }
        private void radioButtonAuthor_NotMe_Checked(object sender, RoutedEventArgs e)
        {
            authorFilter = 0;
        }

        private void radioButtonAuthor_NotImportant_Checked(object sender, RoutedEventArgs e)
        {
            authorFilter = null;
        }
    }
}
