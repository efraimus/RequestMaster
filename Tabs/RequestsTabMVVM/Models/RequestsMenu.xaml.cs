using RequestMaster.Databases.MainDatabase;
using RequestMaster.Patterns;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;

namespace RequestMaster.Tabs.RequestsTabMVVM.Models
{
    public partial class RequestsGrid : UserControl
    {
        RequestsContext db;
        public RequestsGrid()
        {
            InitializeComponent();
            db = DatabaseSingleton.CreateInstance();
            helpButton.Focus();
            refreshTables();
        }
        private void refreshTables()
        {
            requestsDataGrid.ItemsSource = db.Requests.ToList();
            requestsDataGrid.AutoGeneratedColumns += requestsDataGrid_AutoGeneratedColumns;
            App.log($"меню заявки: таблицы обновлены");
        }

        private void requestsDataGrid_AutoGeneratedColumns(object? sender, EventArgs e)
        {
            requestsDataGrid.Columns[0].Header = "ID";
            requestsDataGrid.Columns[1].Header = "описание";
            requestsDataGrid.Columns[2].Header = "номер";
            requestsDataGrid.Columns[3].Header = "статус";
            requestsDataGrid.Columns[4].Visibility = Visibility.Hidden;
            requestsDataGrid.Columns[5].Visibility = Visibility.Hidden;
            requestsDataGrid.Columns[6].Visibility = Visibility.Hidden;
        }

        private void SortButton_Click(object sender, RoutedEventArgs e)
        {
            if (radioButtonStatus_NotImportant.IsChecked == false)
            {
                string status = "";
                if (radioButtonStatus_Active.IsChecked == true) status = "активна";
                else if (radioButtonStatus_Processing.IsChecked == true) status = "в обработке";
                else if (radioButtonStatus_Closed.IsChecked == true) status = "закрыта";

                requestsDataGrid.ItemsSource = db.Requests.Where(x => x.Status == status.ToString()).ToList();
            }
            else
            {
                requestsDataGrid.ItemsSource = db.Requests.ToList();
            }
            CollectionViewSource.GetDefaultView(requestsDataGrid.ItemsSource).Refresh();
            App.log($"меню заявки: заявки отсортированы");
        }

        private void helpButton_Click(object sender, RoutedEventArgs e)
        {
            snackBar.MessageQueue?.Enqueue
                    ("нажмите на любую заявку дважды", null, null, null, false, true, TimeSpan.FromSeconds(3));
            App.log($"меню заявки: нажата кнопка помощь");
        }
        private void ClearFiltersButton_Click(object sender, RoutedEventArgs e)
        {
            refreshRequestsDataGridWithoutFilters();
            App.log($"меню заявки: фильтры очищены");
        }
        private void createRequestButton_Click(object sender, RoutedEventArgs e)
        {
            Requests.createRequestMenu.Visibility = Visibility.Visible;
            App.log($"меню заявки: нажата кнопка создать заявку");
        }

        private void refreshRequestsDataGridWithoutFilters()
        {
            requestsDataGrid.ItemsSource = db.Requests.ToList();
            App.log($"меню заявки: таблица обновлена без фильтров");
        }
        private void requestsDataGrid_MouseDoubleClick(object sender, System.Windows.Input.MouseButtonEventArgs e)
        {
            Requests.requestCard = db.Requests.Where(x => x.RequestID == requestsDataGrid.SelectedIndex + 1).First();
            Requests.requestDetailsMenu.Visibility = Visibility.Visible;
            App.log($"меню заявки: открыто меню детали заявки №{requestsDataGrid.SelectedIndex + 1}");
        }
    }
}
