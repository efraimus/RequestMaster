<Application x:Class="RequestMaster.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:RequestMaster"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             Exit="onExit"
             Startup="onStartup"
             StartupUri="Windows\AuthWindow.xaml">


    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesign3.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                <Setter Property="FontSize"      Value="{x:Static local:App.fontSize}"/>
                <Setter Property="Height"        Value="50"/>
                <Setter Property="Background"    Value="{x:Static local:App.buttonsColor}"/>
                <Setter Property="BorderBrush"   Value="{x:Static local:App.buttonsColor}"/>
                <Setter Property="Foreground"    Value="White"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
            
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="FontSize"      Value="{x:Static local:App.fontSize}"/>
                <Setter Property="FontFamily"    Value="{x:Static local:App.fontFamily}"/>
                <Setter Property="Height"        Value="NaN"/>
                <Setter Property="Foreground"    Value="{x:Static local:App.textColor}"/>
            </Style>

            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignTextBlock}">
                <Setter Property="FontFamily"    Value="{x:Static local:App.fontFamily}"/>
                <Setter Property="FontSize"      Value="{x:Static local:App.fontSize}"/>
            </Style>

            <Style TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MaterialDesignPasswordBox}">
                <Setter Property="FontSize"      Value="{x:Static local:App.fontSize}"/>
                <Setter Property="FontFamily"    Value="{x:Static local:App.fontFamily}"/>
                <Setter Property="VerticalContentAlignment" Value="Bottom"/>
                <Setter Property="Foreground"    Value="{x:Static local:App.textColor}"/>
            </Style>

            <Style TargetType="{x:Type DataGrid}" BasedOn="{StaticResource MaterialDesignDataGrid}">
                <Setter Property="FontSize"                 Value="{x:Static local:App.fontSize}"/>
                <Setter Property="FontFamily"               Value="{x:Static local:App.fontFamily}"/>
                <Setter Property="GridLinesVisibility"      Value="All"/>
                <Setter Property="Background"               Value="{x:Static local:App.foregroundColor}"/>
                <Setter Property="Foreground"               Value="{x:Static local:App.textColor}"/>
                <Setter Property="BorderBrush"              Value="{x:Static local:App.textColor}"/>
                <Setter Property="BorderThickness"          Value="1"/>
                <Setter Property="IsReadOnly"               Value="True"/>
            </Style>

            <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MaterialDesignDataGridCell}">
                <Setter Property="Padding" Value="10"/>
            </Style>

            <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MaterialDesignDataGridRow}">
                <Setter Property="Background"         Value="{x:Static local:App.foregroundColor}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"   Value="True">
                        <Setter Property="Background" Value="{x:Static local:App.backgroundColor}"/>
                    </Trigger>
                    <Trigger Property="IsSelected"    Value="True">
                        <Setter Property="Background" Value="{x:Static local:App.backgroundColor}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                <Setter Property="Foreground"                 Value="{x:Static local:App.textColor}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"   Value="True">
                        <Setter Property="Background" Value="{x:Static local:App.textColor}"/>
                        <Setter Property="Foreground" Value="{x:Static local:App.foregroundColor}"/>
                    </Trigger>
                    
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="False" />
                            <Condition Property="SortDirection" Value="Ascending" />
                        </MultiTrigger.Conditions>
                        
                        <MultiTrigger.Setters>
                            <Setter Property="Foreground" Value="{x:Static local:App.textColor}"/>
                        </MultiTrigger.Setters> 
                    </MultiTrigger>

                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="False" />
                            <Condition Property="SortDirection" Value="Descending" />
                        </MultiTrigger.Conditions>

                        <MultiTrigger.Setters>
                            <Setter Property="Foreground" Value="{x:Static local:App.textColor}"/>
                        </MultiTrigger.Setters>
                    </MultiTrigger>

                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
