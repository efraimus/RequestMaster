using RequestMaster.Databases.MainDatabase;
using RequestMaster.Patterns;
using RequestMaster.Tabs.RequestsTabMVVM.Models;
using RequestMaster.ViewModels;
using System.Windows;
using System.Windows.Controls;

namespace RequestMaster.Tabs
{
    public partial class Requests : UserControl
    {
        public static Request requestCard;
        public static RequestsGrid requestsMenu;
        public static RequestDetails requestDetailsMenu;
        public static CreateRequest createRequestMenu;
        RequestsContext db;
        public Requests()
        {
            InitializeComponent();

            db = DatabaseSingleton.CreateInstance();
            DataContext = new RequestsViewModel();

            requestsMenu = new RequestsGrid();
            requestsMenu.DataContext = RequestsViewModel.requestDetailsViewModel;
            requestsMenu.IsVisibleChanged += requestsMenu_IsVisibleChanged;
            grid1.Children.Add(requestsMenu);

            requestDetailsMenu = new RequestDetails();
            requestDetailsMenu.DataContext = RequestsViewModel.requestDetailsViewModel;
            requestDetailsMenu.IsVisibleChanged += requestDetailsMenu_IsVisibleChanged;
            grid1.Children.Add(requestDetailsMenu);

            createRequestMenu = new CreateRequest();
            createRequestMenu.DataContext = RequestsViewModel.createRequestViewModel;
            createRequestMenu.IsVisibleChanged += createRequestMenu_IsVisibleChanged;
            grid1.Children.Add(createRequestMenu);
        }

        private void requestsMenu_IsVisibleChanged(object sender, DependencyPropertyChangedEventArgs e)
        {
            if (requestsMenu.Visibility == Visibility.Visible)
            {
                createRequestMenu.Visibility = Visibility.Hidden;
                requestDetailsMenu.Visibility = Visibility.Hidden;
                requestsMenu.requestsDataGrid.ItemsSource = db.Requests.ToList();
            }
        }

        private void requestDetailsMenu_IsVisibleChanged(object sender, DependencyPropertyChangedEventArgs e)
        {
            if (requestDetailsMenu.Visibility == Visibility.Visible)
            {
                createRequestMenu.Visibility = Visibility.Hidden;
                requestsMenu.Visibility = Visibility.Hidden;
                requestDetailsMenu.commentsDataGrid.AutoGeneratedColumns += CommentsDataGrid_AutoGeneratedColumns;
                requestDetailsMenu.commentsDataGrid.ItemsSource = db.Comments.Where(x => x.RequestID == requestCard!.RequestID).ToList();
                requestDetailsMenu.requestIdTextBlock.Text = $"{requestCard.RequestID}";
                requestDetailsMenu.requestTelephoneNumberTextBlock.Text = $"{requestCard.TelephoneNumber}";
                requestDetailsMenu.requestDescriptionTextBlock.Text = $"{requestCard.Description}";
                requestDetailsMenu.requestStatusTextBlock.Text = $"{requestCard.Status}";
                if (requestCard.Status == "закрыта")
                {
                    requestDetailsMenu.closeRequestButton.Visibility = Visibility.Hidden;
                }
                else
                {
                    requestDetailsMenu.openRequestButton.Visibility = Visibility.Hidden;
                }
            }
        }
        private void CommentsDataGrid_AutoGeneratedColumns(object? sender, EventArgs e)
        {
            requestDetailsMenu.commentsDataGrid.Columns[0].Header = "ID";
            requestDetailsMenu.commentsDataGrid.Columns[1].Header = "содержание";
            requestDetailsMenu.commentsDataGrid.Columns[2].Header = "кто создал";
            requestDetailsMenu.commentsDataGrid.Columns[3].Header = "дата создания";
            requestDetailsMenu.commentsDataGrid.Columns[4].Visibility = Visibility.Hidden;
            requestDetailsMenu.commentsDataGrid.Columns[5].Visibility = Visibility.Hidden;
        }
        private void createRequestMenu_IsVisibleChanged(object sender, DependencyPropertyChangedEventArgs e)
        {
            if (createRequestMenu.Visibility == Visibility.Visible)
            {
                requestsMenu.Visibility = Visibility.Hidden;
                requestDetailsMenu.Visibility = Visibility.Hidden;
            }
        }
    }
}